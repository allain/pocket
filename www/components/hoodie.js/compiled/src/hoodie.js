// Generated by CoffeeScript 1.4.0
var Hoodie,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Hoodie = (function(_super) {

  __extends(Hoodie, _super);

  function Hoodie(baseUrl) {
    this.baseUrl = baseUrl;
    if (this.baseUrl) {
      this.baseUrl = this.baseUrl.replace(/\/+$/, '');
    } else {
      this.baseUrl = location.protocol + "//api." + location.hostname.replace(/^www\./, '');
    }
    this.store = new this.constructor.LocalStore(this);
    this.config = new this.constructor.Config(this);
    this.account = new this.constructor.Account(this);
    this.remote = new this.constructor.AccountRemote(this);
    this._loadExtensions();
  }

  Hoodie.prototype.request = function(type, path, options) {
    var defaults;
    if (options == null) {
      options = {};
    }
    defaults = {
      type: type,
      url: "" + this.baseUrl + path,
      xhrFields: {
        withCredentials: true
      },
      crossDomain: true,
      dataType: 'json'
    };
    return $.ajax($.extend(defaults, options));
  };

  Hoodie.prototype.open = function(store_name, options) {
    if (options == null) {
      options = {};
    }
    $.extend(options, {
      name: store_name
    });
    return new Hoodie.Remote(this, options);
  };

  Hoodie.prototype.uuid = function(len) {
    var chars, i, radix;
    if (len == null) {
      len = 7;
    }
    chars = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');
    radix = chars.length;
    return ((function() {
      var _i, _results;
      _results = [];
      for (i = _i = 0; 0 <= len ? _i < len : _i > len; i = 0 <= len ? ++_i : --_i) {
        _results.push(chars[0 | Math.random() * radix]);
      }
      return _results;
    })()).join('');
  };

  Hoodie.prototype.defer = $.Deferred;

  Hoodie.prototype.isPromise = function(obj) {
    return typeof (obj != null ? obj.done : void 0) === 'function' && typeof obj.resolve === 'undefined';
  };

  Hoodie.prototype.resolveWith = function() {
    var _ref;
    return (_ref = this.defer()).resolve.apply(_ref, arguments).promise();
  };

  Hoodie.prototype.rejectWith = function() {
    var _ref;
    return (_ref = this.defer()).reject.apply(_ref, arguments).promise();
  };

  Hoodie.extend = function(name, Module) {
    this._extensions || (this._extensions = {});
    return this._extensions[name] = Module;
  };

  Hoodie.prototype.extend = function(name, Module) {
    return this[name] = new Module(this);
  };

  Hoodie.prototype._loadExtensions = function() {
    var Module, instanceName, _ref, _results;
    _ref = this.constructor._extensions;
    _results = [];
    for (instanceName in _ref) {
      Module = _ref[instanceName];
      _results.push(this[instanceName] = new Module(this));
    }
    return _results;
  };

  return Hoodie;

})(Events);
